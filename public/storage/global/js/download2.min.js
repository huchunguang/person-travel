/* 
 * Copyright(C)2016 A6178879
 *
 * All rights reserved Arkema Pte. Ltd.
 * Website Developed by: Eng'r Nolan F. Sunico
 * Date Created: Oct 12, 2016
 * Time Created: 9:52:46 AM
 * Module: download2.min
 * Project: Arkema-Eleave
 * download.js v3.0, by dandavis; 2008-2014. [CCBY2] see http://danml.com/download.html for tests/usage
 * v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime
 * v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs
 * v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support
 * data can be a string, Blob, File, or dataURL		
 */

function download(a,b,c){function r(a){var b=a.split(/[:;,]/),c=b[1],d="base64"==b[2]?atob:decodeURIComponent,e=d(b.pop()),f=e.length,g=0,h=new Uint8Array(f);for(g;g<f;++g)h[g]=e.charCodeAt(g);return new k([h],{type:c})}function s(a,b){if("download"in i)return i.href=a,i.setAttribute("download",m),i.innerHTML="downloading...",h.body.appendChild(i),setTimeout(function(){i.click(),h.body.removeChild(i),b===!0&&setTimeout(function(){d.URL.revokeObjectURL(i.href)},250)},66),!0;var c=h.createElement("iframe");h.body.appendChild(c),b||(a="data:"+a.replace(/^data:([\w\/\-\+]+)/,e)),c.src=a,setTimeout(function(){h.body.removeChild(c)},333)}var n,o,q,d=window,e="application/octet-stream",f=c||e,g=a,h=document,i=h.createElement("a"),j=function(a){return String(a)},k=d.Blob||d.MozBlob||d.WebKitBlob||j,l=d.MSBlobBuilder||d.WebKitBlobBuilder||d.BlobBuilder,m=b||"download";if("true"===String(this)&&(g=[g,f],f=g[0],g=g[1]),String(g).match(/^data\:[\w+\-]+\/[\w+\-]+[,;]/))return navigator.msSaveBlob?navigator.msSaveBlob(r(g),m):s(g);try{n=g instanceof k?g:new k([g],{type:f})}catch(a){l&&(o=new l,o.append([g]),n=o.getBlob(f))}if(navigator.msSaveBlob)return navigator.msSaveBlob(n,m);if(d.URL)s(d.URL.createObjectURL(n),!0);else{if("string"==typeof n||n.constructor===j)try{return s("data:"+f+";base64,"+d.btoa(n))}catch(a){return s("data:"+f+","+encodeURIComponent(n))}q=new FileReader,q.onload=function(a){s(this.result)},q.readAsDataURL(n)}return!0}
